webpackJsonp([0],{

/***/ "./src/js/app.js":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {//Navigation active class
$(function () {
  var path = location.pathname.replace(/^\/+|\/+$/gm, '');

  $('.section-category-nav li a').each(function () {
    if (path !== '' && this.href.includes(path)) {
      $(this).addClass('active');
    }
  });

  $('header li a').each(function () {
    if (path !== '' && this.href.includes(path)) {
      $(this).addClass('active');
    }
  });

  $(document).on('click', '.loadmore-btn', function (event) {
    event.preventDefault();

    var wrapper = $('.load-more-wrapper');
    var loadMoreBtn = $('.loadmore-btn');
    $.get($(this).attr('href'), function (response) {
      var items = $(response).find('.load-more-item');
      var nextLoadMoreBtn = $(response).find('.loadmore-btn');

      items.each(function (_, item) {
        wrapper.append(item);
      });

      if (nextLoadMoreBtn.length) {
        loadMoreBtn.attr('href', nextLoadMoreBtn[0].href);
      } else {
        loadMoreBtn.hide();
      }
    });
  });
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__("./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/sass/app.scss":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("./src/js/app.js");
module.exports = __webpack_require__("./src/sass/app.scss");


/***/ })

},[0]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvYXBwLmpzIiwid2VicGFjazovLy8uL3NyYy9zYXNzL2FwcC5zY3NzP2Q5NWEiXSwibmFtZXMiOlsiJCIsInBhdGgiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwicmVwbGFjZSIsImVhY2giLCJocmVmIiwiaW5jbHVkZXMiLCJhZGRDbGFzcyIsImRvY3VtZW50Iiwib24iLCJldmVudCIsInByZXZlbnREZWZhdWx0Iiwid3JhcHBlciIsImxvYWRNb3JlQnRuIiwiZ2V0IiwiYXR0ciIsInJlc3BvbnNlIiwiaXRlbXMiLCJmaW5kIiwibmV4dExvYWRNb3JlQnRuIiwiXyIsIml0ZW0iLCJhcHBlbmQiLCJsZW5ndGgiLCJoaWRlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0FBLEVBQUUsWUFBWTtBQUNaLE1BQUlDLE9BQU9DLFNBQVNDLFFBQVQsQ0FBa0JDLE9BQWxCLENBQTBCLGFBQTFCLEVBQXlDLEVBQXpDLENBQVg7O0FBRUFKLElBQUUsNEJBQUYsRUFBZ0NLLElBQWhDLENBQXFDLFlBQVk7QUFDL0MsUUFBSUosU0FBUyxFQUFULElBQWUsS0FBS0ssSUFBTCxDQUFVQyxRQUFWLENBQW1CTixJQUFuQixDQUFuQixFQUE2QztBQUMzQ0QsUUFBRSxJQUFGLEVBQVFRLFFBQVIsQ0FBaUIsUUFBakI7QUFDRDtBQUNGLEdBSkQ7O0FBTUFSLElBQUUsYUFBRixFQUFpQkssSUFBakIsQ0FBc0IsWUFBWTtBQUNoQyxRQUFJSixTQUFTLEVBQVQsSUFBZSxLQUFLSyxJQUFMLENBQVVDLFFBQVYsQ0FBbUJOLElBQW5CLENBQW5CLEVBQTZDO0FBQzNDRCxRQUFFLElBQUYsRUFBUVEsUUFBUixDQUFpQixRQUFqQjtBQUNEO0FBQ0YsR0FKRDs7QUFNQVIsSUFBRVMsUUFBRixFQUFZQyxFQUFaLENBQWUsT0FBZixFQUF3QixlQUF4QixFQUF5QyxVQUFVQyxLQUFWLEVBQWlCO0FBQ3hEQSxVQUFNQyxjQUFOOztBQUVBLFFBQU1DLFVBQVViLEVBQUUsb0JBQUYsQ0FBaEI7QUFDQSxRQUFNYyxjQUFjZCxFQUFFLGVBQUYsQ0FBcEI7QUFDQUEsTUFBRWUsR0FBRixDQUFNZixFQUFFLElBQUYsRUFBUWdCLElBQVIsQ0FBYSxNQUFiLENBQU4sRUFBNEIsVUFBVUMsUUFBVixFQUFvQjtBQUM5QyxVQUFNQyxRQUFRbEIsRUFBRWlCLFFBQUYsRUFBWUUsSUFBWixDQUFpQixpQkFBakIsQ0FBZDtBQUNBLFVBQU1DLGtCQUFrQnBCLEVBQUVpQixRQUFGLEVBQVlFLElBQVosQ0FBaUIsZUFBakIsQ0FBeEI7O0FBRUFELFlBQU1iLElBQU4sQ0FBVyxVQUFDZ0IsQ0FBRCxFQUFJQyxJQUFKLEVBQWE7QUFDdEJULGdCQUFRVSxNQUFSLENBQWVELElBQWY7QUFDRCxPQUZEOztBQUlBLFVBQUlGLGdCQUFnQkksTUFBcEIsRUFBNEI7QUFDMUJWLG9CQUFZRSxJQUFaLENBQWlCLE1BQWpCLEVBQXlCSSxnQkFBZ0IsQ0FBaEIsRUFBbUJkLElBQTVDO0FBQ0QsT0FGRCxNQUVPO0FBQ0xRLG9CQUFZVyxJQUFaO0FBQ0Q7QUFDRixLQWJEO0FBY0QsR0FuQkQ7QUFvQkQsQ0FuQ0QsRTs7Ozs7Ozs7QUNEQSx5QyIsImZpbGUiOiIvanMvYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9OYXZpZ2F0aW9uIGFjdGl2ZSBjbGFzc1xuJChmdW5jdGlvbiAoKSB7XG4gIGxldCBwYXRoID0gbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXlxcLyt8XFwvKyQvZ20sICcnKTtcbiAgXG4gICQoJy5zZWN0aW9uLWNhdGVnb3J5LW5hdiBsaSBhJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHBhdGggIT09ICcnICYmIHRoaXMuaHJlZi5pbmNsdWRlcyhwYXRoKSkge1xuICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgfVxuICB9KTtcbiAgXG4gICQoJ2hlYWRlciBsaSBhJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHBhdGggIT09ICcnICYmIHRoaXMuaHJlZi5pbmNsdWRlcyhwYXRoKSkge1xuICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgfVxuICB9KTtcbiAgXG4gICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcubG9hZG1vcmUtYnRuJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBcbiAgICBjb25zdCB3cmFwcGVyID0gJCgnLmxvYWQtbW9yZS13cmFwcGVyJyk7XG4gICAgY29uc3QgbG9hZE1vcmVCdG4gPSAkKCcubG9hZG1vcmUtYnRuJyk7XG4gICAgJC5nZXQoJCh0aGlzKS5hdHRyKCdocmVmJyksIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgY29uc3QgaXRlbXMgPSAkKHJlc3BvbnNlKS5maW5kKCcubG9hZC1tb3JlLWl0ZW0nKTtcbiAgICAgIGNvbnN0IG5leHRMb2FkTW9yZUJ0biA9ICQocmVzcG9uc2UpLmZpbmQoJy5sb2FkbW9yZS1idG4nKTtcbiAgICAgIFxuICAgICAgaXRlbXMuZWFjaCgoXywgaXRlbSkgPT4ge1xuICAgICAgICB3cmFwcGVyLmFwcGVuZChpdGVtKTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBpZiAobmV4dExvYWRNb3JlQnRuLmxlbmd0aCkge1xuICAgICAgICBsb2FkTW9yZUJ0bi5hdHRyKCdocmVmJywgbmV4dExvYWRNb3JlQnRuWzBdLmhyZWYpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9hZE1vcmVCdG4uaGlkZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn0pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2pzL2FwcC5qcyIsIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvc2Fzcy9hcHAuc2Nzc1xuLy8gbW9kdWxlIGlkID0gLi9zcmMvc2Fzcy9hcHAuc2Nzc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9